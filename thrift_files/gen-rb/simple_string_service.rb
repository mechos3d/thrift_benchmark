#
# Autogenerated by Thrift Compiler (0.9.1)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#

require 'thrift'
require 'simple_string_service_types'

module ThriftBenchmark
  module SimpleStringService
    class Client
      include ::Thrift::Client

      def get_feature(query)
        send_get_feature(query)
        return recv_get_feature()
      end

      def send_get_feature(query)
        send_message('get_feature', Get_feature_args, :query => query)
      end

      def recv_get_feature()
        result = receive_message(Get_feature_result)
        return result.success unless result.success.nil?
        raise ::Thrift::ApplicationException.new(::Thrift::ApplicationException::MISSING_RESULT, 'get_feature failed: unknown result')
      end

    end

    class Processor
      include ::Thrift::Processor

      def process_get_feature(seqid, iprot, oprot)
        args = read_args(iprot, Get_feature_args)
        result = Get_feature_result.new()
        result.success = @handler.get_feature(args.query)
        write_result(result, oprot, 'get_feature', seqid)
      end

    end

    # HELPER FUNCTIONS AND STRUCTURES

    class Get_feature_args
      include ::Thrift::Struct, ::Thrift::Struct_Union
      QUERY = 1

      FIELDS = {
        QUERY => {:type => ::Thrift::Types::I32, :name => 'query'}
      }

      def struct_fields; FIELDS; end

      def validate
      end

      ::Thrift::Struct.generate_accessors self
    end

    class Get_feature_result
      include ::Thrift::Struct, ::Thrift::Struct_Union
      SUCCESS = 0

      FIELDS = {
        SUCCESS => {:type => ::Thrift::Types::STRING, :name => 'success'}
      }

      def struct_fields; FIELDS; end

      def validate
      end

      ::Thrift::Struct.generate_accessors self
    end

  end

end
